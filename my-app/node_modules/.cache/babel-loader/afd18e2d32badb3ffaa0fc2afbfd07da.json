{"ast":null,"code":"var _excluded = [\"fileName\"];\n\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (it) return (it = it.call(o)).next.bind(it);\n\n  if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n    if (it) o = it;\n    var i = 0;\n    return function () {\n      if (i >= o.length) return {\n        done: true\n      };\n      return {\n        done: false,\n        value: o[i++]\n      };\n    };\n  }\n\n  throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n} // Copy-pasted from:\n// https://github.com/davidramos-om/zipcelx-on-steroids/blob/master/src/zipcelx.js\n\n\nimport JSZip from 'jszip';\nimport FileSaver from 'file-saver';\nimport generateWorkbookXml from './statics/workbook.xml.js';\nimport generateWorkbookXmlRels from './statics/workbook.xml.rels.js';\nimport rels from './statics/rels.js';\nimport contentTypes from './statics/[Content_Types].xml.js';\nimport { generateSheets } from './writeXlsxFile.common.js';\nexport default function writeXlsxFile(data) {\n  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n      fileName = _ref.fileName,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  return generateXlsxFile(data, rest).then(function (blob) {\n    if (fileName) {\n      return FileSaver.saveAs(blob, fileName);\n    }\n\n    return blob;\n  });\n}\n/**\r\n * Writes an *.xlsx file into a \"blob\".\r\n * https://github.com/egeriis/zipcelx/issues/68\r\n * \"The reason if you want to send the excel file or store it natively on Cordova/capacitor app\".\r\n * @return {Blob}\r\n */\n\nfunction generateXlsxFile(data, _ref2) {\n  var sheetName = _ref2.sheet,\n      sheetNames = _ref2.sheets,\n      schema = _ref2.schema,\n      columns = _ref2.columns,\n      headerStyle = _ref2.headerStyle,\n      fontFamily = _ref2.fontFamily,\n      fontSize = _ref2.fontSize,\n      orientation = _ref2.orientation,\n      stickyRowsCount = _ref2.stickyRowsCount,\n      stickyColumnsCount = _ref2.stickyColumnsCount,\n      dateFormat = _ref2.dateFormat;\n  var zip = new JSZip();\n  zip.file('_rels/.rels', rels);\n  zip.file('[Content_Types].xml', contentTypes);\n\n  var _generateSheets = generateSheets({\n    data: data,\n    sheetName: sheetName,\n    sheetNames: sheetNames,\n    schema: schema,\n    columns: columns,\n    headerStyle: headerStyle,\n    fontFamily: fontFamily,\n    fontSize: fontSize,\n    orientation: orientation,\n    stickyRowsCount: stickyRowsCount,\n    stickyColumnsCount: stickyColumnsCount,\n    dateFormat: dateFormat\n  }),\n      sheets = _generateSheets.sheets,\n      getSharedStringsXml = _generateSheets.getSharedStringsXml,\n      getStylesXml = _generateSheets.getStylesXml;\n\n  var xl = zip.folder('xl');\n  xl.file('_rels/workbook.xml.rels', generateWorkbookXmlRels({\n    sheets: sheets\n  }));\n  xl.file('workbook.xml', generateWorkbookXml({\n    sheets: sheets\n  }));\n  xl.file('styles.xml', getStylesXml());\n  xl.file('sharedStrings.xml', getSharedStringsXml());\n\n  for (var _iterator = _createForOfIteratorHelperLoose(sheets), _step; !(_step = _iterator()).done;) {\n    var _step$value = _step.value,\n        id = _step$value.id,\n        _data = _step$value.data;\n    xl.file(\"worksheets/sheet\".concat(id, \".xml\"), _data);\n  }\n\n  return zip.generateAsync({\n    type: 'blob',\n    mimeType: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\n  });\n}","map":{"version":3,"mappings":"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","names":["JSZip","FileSaver","generateWorkbookXml","generateWorkbookXmlRels","rels","contentTypes","generateSheets","writeXlsxFile","data","fileName","rest","generateXlsxFile","then","blob","saveAs","sheetName","sheet","sheetNames","sheets","schema","columns","headerStyle","fontFamily","fontSize","orientation","stickyRowsCount","stickyColumnsCount","dateFormat","zip","file","getSharedStringsXml","getStylesXml","xl","folder","id","generateAsync","type","mimeType"],"sources":["C:\\Users\\anasn\\Downloads\\Bachelor-Defense-System-5\\my-app\\node_modules\\write-excel-file\\source\\write\\writeXlsxFileBrowser.js"],"sourcesContent":["// Copy-pasted from:\r\n// https://github.com/davidramos-om/zipcelx-on-steroids/blob/master/src/zipcelx.js\r\n\r\nimport JSZip from 'jszip'\r\nimport FileSaver from 'file-saver'\r\n\r\nimport generateWorkbookXml from './statics/workbook.xml.js'\r\nimport generateWorkbookXmlRels from './statics/workbook.xml.rels.js'\r\nimport rels from './statics/rels.js'\r\nimport contentTypes from './statics/[Content_Types].xml.js'\r\n\r\nimport { generateSheets } from './writeXlsxFile.common.js'\r\n\r\nexport default function writeXlsxFile(data, { fileName, ...rest } = {}) {\r\n  return generateXlsxFile(data, rest).then((blob) => {\r\n    if (fileName) {\r\n      return FileSaver.saveAs(blob, fileName)\r\n    }\r\n    return blob\r\n  })\r\n}\r\n\r\n/**\r\n * Writes an *.xlsx file into a \"blob\".\r\n * https://github.com/egeriis/zipcelx/issues/68\r\n * \"The reason if you want to send the excel file or store it natively on Cordova/capacitor app\".\r\n * @return {Blob}\r\n */\r\nfunction generateXlsxFile(data, {\r\n  sheet: sheetName,\r\n  sheets: sheetNames,\r\n  schema,\r\n  columns,\r\n  headerStyle,\r\n  fontFamily,\r\n  fontSize,\r\n  orientation,\r\n  stickyRowsCount,\r\n  stickyColumnsCount,\r\n  dateFormat\r\n}) {\r\n  const zip = new JSZip()\r\n\r\n  zip.file('_rels/.rels', rels)\r\n  zip.file('[Content_Types].xml', contentTypes)\r\n\r\n  const {\r\n    sheets,\r\n    getSharedStringsXml,\r\n    getStylesXml\r\n  } = generateSheets({\r\n    data,\r\n    sheetName,\r\n    sheetNames,\r\n    schema,\r\n    columns,\r\n    headerStyle,\r\n    fontFamily,\r\n    fontSize,\r\n    orientation,\r\n    stickyRowsCount,\r\n    stickyColumnsCount,\r\n    dateFormat\r\n  })\r\n\r\n  const xl = zip.folder('xl')\r\n  xl.file('_rels/workbook.xml.rels', generateWorkbookXmlRels({ sheets }))\r\n  xl.file('workbook.xml', generateWorkbookXml({ sheets }))\r\n  xl.file('styles.xml', getStylesXml())\r\n  xl.file('sharedStrings.xml', getSharedStringsXml())\r\n\r\n  for (const { id, data } of sheets) {\r\n    xl.file(`worksheets/sheet${id}.xml`, data)\r\n  }\r\n\r\n  return zip.generateAsync({\r\n    type: 'blob',\r\n    mimeType: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'\r\n  })\r\n}"]},"metadata":{},"sourceType":"module"}