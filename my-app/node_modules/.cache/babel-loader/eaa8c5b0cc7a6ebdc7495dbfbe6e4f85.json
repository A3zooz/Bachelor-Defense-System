{"ast":null,"code":"function _createForOfIteratorHelperLoose(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (it) return (it = it.call(o)).next.bind(it);\n\n  if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n    if (it) o = it;\n    var i = 0;\n    return function () {\n      if (i >= o.length) return {\n        done: true\n      };\n      return {\n        done: false,\n        value: o[i++]\n      };\n    };\n  }\n\n  throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nexport default function initSharedStrings() {\n  var sharedStrings = [];\n  var sharedStringsIndex = {};\n  return {\n    getSharedStringsXml: function getSharedStringsXml() {\n      return generateXml(sharedStrings);\n    },\n    getSharedString: function getSharedString(string) {\n      var id = sharedStringsIndex[string];\n\n      if (id === undefined) {\n        id = String(sharedStrings.length);\n        sharedStringsIndex[string] = id;\n        sharedStrings.push(string);\n      }\n\n      return id;\n    }\n  };\n}\n\nfunction generateXml(sharedStrings) {\n  var xml = '<?xml version=\"1.0\"?>';\n  xml += '<sst xmlns=\"http://schemas.openxmlformats.org/spreadsheetml/2006/main\">';\n\n  for (var _iterator = _createForOfIteratorHelperLoose(sharedStrings), _step; !(_step = _iterator()).done;) {\n    var string = _step.value;\n    var attributes = string.trim().length === string.length ? '' : ' xml:space=\"preserve\"';\n    xml += \"<si><t\".concat(attributes, \">\").concat(string, \"</t></si>\");\n  }\n\n  xml += '</sst>';\n  return xml;\n}","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,eAAe,SAASA,iBAAT,GAA6B;EAC3C,IAAMC,aAAa,GAAG,EAAtB;EACA,IAAMC,kBAAkB,GAAG,EAA3B;EAEA,OAAO;IACNC,mBADM,iCACgB;MACrB,OAAOC,WAAW,CAACH,aAAD,CAAlB;IAFK;IAKNI,eALM,2BAKUC,MALV,EAKkB;MACpB,IAAIC,EAAE,GAAGL,kBAAkB,CAACI,MAAD,CAA3B;;MACA,IAAIC,EAAE,KAAKC,SAAX,EAAsB;QACxBD,EAAE,GAAGE,MAAM,CAACR,aAAa,CAACS,MAAf,CAAXH;QACAL,kBAAkB,CAACI,MAAD,CAAlBJ,GAA6BK,EAA7BL;QACAD,aAAa,CAACU,IAAdV,CAAmBK,MAAnBL;MACG;;MACD,OAAOM,EAAP;IACH;EAbK,CAAP;AAeA;;AAED,SAASH,WAAT,CAAqBH,aAArB,EAAoC;EACnC,IAAIW,GAAG,GAAG,uBAAV;EACAA,GAAG,IAAI,yEAAPA;;EACA,qDAAqBX,aAArB,wCAAoC;IAAA,IAAzBK,MAAyB;IACnC,IAAMO,UAAU,GAAGP,MAAM,CAACQ,IAAPR,GAAcI,MAAdJ,KAAyBA,MAAM,CAACI,MAAhCJ,GAAyC,EAAzCA,GAA8C,uBAAjE;IACAM,GAAG,oBAAaC,UAAb,cAA2BP,MAA3B,cAAHM;EACA;;EACDA,GAAG,IAAI,QAAPA;EACA,OAAOA,GAAP;AACA","names":["initSharedStrings","sharedStrings","sharedStringsIndex","getSharedStringsXml","generateXml","getSharedString","string","id","undefined","String","length","push","xml","attributes","trim"],"sources":["C:\\Users\\anasn\\Downloads\\Bachelor-Defense-System-5\\my-app\\node_modules\\write-excel-file\\source\\write\\sharedStrings.js"],"sourcesContent":["export default function initSharedStrings() {\r\n\tconst sharedStrings = []\r\n\tconst sharedStringsIndex = {}\r\n\r\n\treturn {\r\n\t\tgetSharedStringsXml() {\r\n\t\t\treturn generateXml(sharedStrings)\r\n\t\t},\r\n\r\n\t\tgetSharedString(string) {\r\n      let id = sharedStringsIndex[string]\r\n      if (id === undefined) {\r\n\t\t\t\tid = String(sharedStrings.length)\r\n\t\t\t\tsharedStringsIndex[string] = id\r\n\t\t\t\tsharedStrings.push(string)\r\n      }\r\n      return id\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction generateXml(sharedStrings) {\r\n\tlet xml = '<?xml version=\"1.0\"?>'\r\n\txml += '<sst xmlns=\"http://schemas.openxmlformats.org/spreadsheetml/2006/main\">'\r\n\tfor (const string of sharedStrings) {\r\n\t\tconst attributes = string.trim().length === string.length ? '' : ' xml:space=\"preserve\"';\r\n\t\txml += `<si><t${attributes}>${string}</t></si>`\r\n\t}\r\n\txml += '</sst>'\r\n\treturn xml\r\n}"]},"metadata":{},"sourceType":"module"}